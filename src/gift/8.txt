1C_8#Механизмы интеграции и обмена данными в 1С###
С точки зрения XML сериализации значение типа “ДокументСсылка.ИмяДокумента” относится:{
=К простым типам
~К сложным типам
~Применить средства XML сериализации к данному типу значения нельзя
}
Одновременно с файлом формата dbf может быть открыто…{
~Любое количество индексных файлов
~Количество индексных файлов, не превышающее количество полей в dbf файле
~Не более трех индексных файлов
=Не более одного индексного файла
}
При обращении к базе данных 1С:Предприятие 8 через OLE выполняется процедура – обработчик события «ПриНачалеРаботыСистемы» определенный…{
=В модуле приложения
~В модуле внешнего соединения
~В общем модуле
~в OLE модуле
}
Данную топологию обмена между информационными базами (имеющими одинаковую конфигурацию) можно реализовать: 
$$$img/8-4.png$$$
{
~Только при использовании возможности распределения информационной базы данных
=Только при использовании возможностей универсального обмена
~Как средствами универсального обмена, так и распределением информационной базы
~Данную топологию реализовать невозможно
}
При записи значения с использованием средств XML сериализации в XML документ:{
~Используются только методы, относящиеся к средствам XML сериалиации
~Используются только возможности объекта "ЗаписьХМL"
=Используются методы, относящиеся к средствам XML сериализации и объект "ЗаписьХМL"
~Для записи преобразованного значения используется метод глобального контекста
"ЗаписатьВФайл(ИмяФайла)"
}
При обращении к базе данных 1С:Предприятие 8 через СОМ выполняется процедура-обработчик события “ПриНачалеРаботыСистемы” определенный…{
~В модуле приложения
=В модуле внешнего соединения
~В общем модуле
~В СОМ модуле
}
Данную топологию обмена между информационными базами (имеющими одинаковую конфигурацию)можно реализовать: 
$$$img/8-7.png$$$
{
~Только при использовании возможности распределения информационной базы данных
~Только при использовании возможностей универсального обмена
=Как средствами универсального обмена, так и распределением информационной базы
~Данную топологию реализовать невозможно
}
Событие “ПриПолученииДанныхОтПодчиненного”, определенное в модуле плана обмена, возникает при получении данных от подчиненного узла:{
=При отмеченном у данного плана обмена флаге "Распределенная база данных"
~При не отмеченном у данного плана обмена флаге "Распределенная база данных"
~Состояние данного флага на вызов этого обработчика события не влияет
}
При последовательном чтении из текстового файла невозможно:{
~Построчное чтение текста
~Посимвольное чтение текста
=Возможно как построчное, так и посимвольное чтение
}
В процедуре, которая будет вызываться при подключении к базе данных через СОМ, нельзя использовать:{
~ДокОбъект=Док.СоздатьДокумент()
=Форма.Открыть()
~Запрос=Новый Запрос
~Нет правильного ответа
}
При использовании механизма распределенных баз данных изменения в конфигурации:{
~Выполняются в каждой информационной базе самостоятельно
~Передаются посредством файла формата cf
=Изменения включаются в стандартные сообщения обмена
~После распределения информационной базы изменение конфигурации запрещено
}
При использовании механизма распределенных информационных баз соответствующем объекте “План обмена” отдельно взятой информационной базы (входящей в распределенную) определяется:{
~Только подчиненные базы (входящие в распределенную)
=Главная (но она может и отсутствовать) и подчиненные базы
~Полная структура определяется в корневой базе, у отдельно взятого экземпляра
базы определены только те информационные базы, с которыми у нее идет непосредственный обмен
}
Для создания объекта, с использованием которого из одной базы 1С:Предприятие 8 будет производиться обращение через OLE к другой информационной базе 1С:Предприятие 8, используется конструктор:{
~Новый Ваsе(СтрокаИнициализации)
~Новый ОLЕОбъект
=Новый СОМОбъект
~Создание подобного объекта производится другими средствами
}
К простым с точки зрения XML сериализации относятся типы:{
~Только: Число, Строка, Дата, Булево
~Только: Число, Строка, Дата, Булево, Неопределенно, Null
~Все стандартные типы XML
=Которые представляются в виде элементов XML только с текстовым содержимым
~С точки зрения XML сериализации нет понятия "простые типы"
}
Экземпляр объекта XBase позволяет одновременно организовать работу:{
=Только с одним файлом формата dbf
~С любым количеством файлов dbf
~С любым количеством файлов dbf, но только в случае наличия файла описания связей
~С любым количеством файлов dbf, но только в случае указания связей между полями с помощью специальных свойств объекта XBase
}
Для получения почты напрямую с почтового сервера (без использования установленного почтового клиента) использует объект:{
~Объект "Почта"
=Объект "ИнтернетПочта"
~Объект "ИнтернетСервер"
~Данная возможность платформой не предусмотрена
}
Элементы управления ActiveX могут использоваться в диалоге формы:{
=Без ограничения
~Только в формах открываемых модально
~Только в формах открываемых не модально
~Не могут размещаться в диалогах форм
}
К сложным, с точки зрения XML сериализации, относятся типы:{
~Все кроме типов относящихся к примитивным
~Все ссылочные типы
~Типы, описанные на "http://www.w3.org/2001/XMLSchema-instance"
=Типы, значения которых представляются в виде элементов XML, содержащих вложенные элементы
~С точки зрения XML сериализации, нет понятия "сложные типы"
}
У плана обмена может быть следующее количество предопределенных узлов (которые нельзя удалить или пометить на удаление):{
~Ни одного
=Всегда один
~Любое количество
}
С точки зрения XML сериализации, значение типа “ХранилищеЗначения” относится:{
=К простым типам
~К сложным типам
~Применить средства XML сериализации к данному типу значения нельзя
}
Для обращения к свойствам элементов управления ActiveX из модуля формы используется:{
~Свойство ActiveX формы, содержащее коллекцию элементов управления ActiveX
=Свойство "ЭлементыФормы"
~Прямое указание имени элемента управления (без использования свойств формы)
~Только реквизит формы, связанный с данным элементом управления ActiveX
}
При использовании универсальных механизмов обмена (в свою очередь использующих планы обмена) таблица регистрации изменений для объектов, изменение которых отправлено в сформированном сообщении:{
~Очищается сразу после отправки сообщения
~Очищается после приема квитанции о приеме отправленного сообщения
=Порядок определяется программистом
}
При использовании механизма распределенных баз данных таблица регистрации изменений для объектов, изменение которых отправлено в сформированном сообщении:{
~Очищается сразу после отправки сообщения
=Очищается после приема квитанции о приеме отправленного сообщения
~Порядок определяется программистом
}
С точки зрения XML сериализации, значение типа “КонстантаМенеджерЗначения.Имя константы” относится:{
~К простым типам
=К сложным типам
~Применить средства XML сериализации к данному типу значения нельзя
}
При работе с объектом “ИнтернетПочта” можно произвести выборку писем (либо заголовков):{
~За указанный период
~Либо все, либо непрочитанные
~Либо все, либо непрочитанные, либо прочитанные
~За указанный период все, либо непрочитанные, либо прочитанные
=Только все письма, находящиеся на сервере
}
В качестве макета нельзя использовать:{
~Документ HTML
=ActiveX элемент управления
~Active документ
~Можно использовать все из перечисленных
~Файл программы Microsoft Word
~Макет оформления компоновки данных
}
При использовании возможности организации универсального обмена данными процесс разрешения коллизий:{
=По умолчанию платформой не определяется
~По умолчанию принимаются изменения, зарегистрированные в вышестоящей базе (по топологии)
~По умолчанию принимаются изменения, зарегистрированные с более поздним временем
~По умолчанию принимаются изменения, зарегистрированные в нижестоящей базе (по топологии)
~По умолчанию принимаются изменения, зарегистрированные с более ранним временем
}
При работе с внешней компонентой (выберите наиболее правильное утверждение):{
~Одновременно в одном сеансе можно загрузить не более одной внешней компоненты с одним расширением файла (*.dll, *.осх)
~Объекты внешней компоненты размещаются в дереве объектов конфигурации и в дальнейшем могут использоваться также как и основные объекты
=После программной загрузки объекты внешней компоненты подключаются к "1С:Предприятию 8"
~Работа с внешними компонентами в "1С:Предприятие 8" не предусмотрена
}
При использовании планов обмена, управлять составом узлов, для которых производится регистрация изменений объектов:{
~Нельзя, регистрация производится для всех заведенных узлов
~Нельзя, регистрация производится для всех заведенных узлов, не помеченных на удаление
=Состав узлов, для которых идет регистрация изменений, может корректироваться при работе с объектом
~Регистрация изменений производится без привязки к конкретному узлу плана обмена
}
Объект “ПреобразованиеXSL” предназначен…{
~Для преобразования таблицы значения в файл программы Microsoft Excel
~Для преобразования табличного документа в файл программы Microsoft Excel
=Для преобразования XML документа в другой документ допустимого формата
~Для задания (и использования для перевода) соответствия между строковыми величинами и числовыми
}
С помощью средств XML сериализации нельзя в XML документ сохранить значения, имеющие тип:{
~Хранилище значений
~Картинка
~Строка неограниченной длины
~Верны 1 и 2 варианты
~Нельзя сохранить все вышеуказанные типы значений
=Можно сохранить значения всех вышеуказанных типов
}
Выберите правильное утверждение, касающееся элемента управления “поле HTML документа”{
~Позволяет просматривать только данные, полученные с помощью объекта HTTP-Соединение
~Позволяет просматривать html документы, полученные любым способом, но расположенные только на локальной машине, с которой производится попытка просмотра
~Позволяет просматривать html документы, полученные любым способом, но расположенные только в локальной сети, на которую распространяется область действия ключа защиты программного комплекса 1С:Предприятие 8.0
=Позволяет просматривать html документы, как в локальной сети, так и в сети Интернет
}
Для отслеживания момента полной загрузки HTML документа в элементе управления “Поле HTML документа” можно использовать:{
~Флаг модифицированности формы
=Обработчик события "Документ сформирован" данного элемента управления, в котором при этом производится проверка свойства URL на равенство заданному адресу ресурса
~Проверку свойства "Значение" данного элемента управление на равенство "Неопределенно"
~Проверку свойства "Значение" данного элемента управление на равенство "Null"
~Проверку свойства "URL" данного элемента управление на равенство заданному адресу ресурса
}
Для получения почты посредством установленного на пользовательском компьютере почтового клиента используется объект:{
=Почта
~ИнтернетПочта
~ПочтовыйКлиент
}
При программном создании фабрики XDTO, типы в ней определенные:{
~Могут расширяться за счет подключения программно создаваемых пакетов XDTO
~Могут расширяться за счет подключения дополнительных схем XML документов
=Не могут расширяться, определяются в полном объеме при создании
}
Типы определенные в глобальной фабрикеXDTO:{
~Могут расширяться за счет создания пакетов XDTO
~Могут расширяться за счет подключения дополнительных схем XML документов
~Не могут расширяться, определяются в полном объеме при создании информационной базы
=Могут расширяться за счет создания пакетов XDTO, изменения состава объектов конфигурации
}
Понятию “Фабрика XDTO” больше всего соответствует такое понятие XML как:{
=Набор схем XML
~Схема XML документа
~Xml документ
~Пространство имен
}
Понятию “Пакет XDTO” больше всего соответствует такое понятие XML как:{
~Набор схем XML
=Схема XML документа
~Xml документ
~Пространство имен
}
В рамках создаваемого пакета XDTO (без использования директивы импорта) можно использовать типы:{
~Определенные только в данном пакете
=Определенные только в данном пакете и типы стандартные для XML
~Определенные только в данном пакете, типы стандартные для XML и типы производные от метаданных системы
}
В рамках модели XDTO понятие “Фасет” относится к:{
~Тип объекта XDTO
=Тип значения XDTO
~Свойство XDTO
~Директива импорта
}
При определении типа свойства объекта XDTO информация о типе включает:{
~Только имя типа
=Имя типа и имя пространства имен
~Имя типа и имя пакета XDTO
~Имя типа и имя фабрики XDTO
}
Менеджер WEB сервисов решает задачу:{
~Управление пулом соединений с информационными базами
~Поддержка WSDL описания сервиса, реализация протокола SOAP
~Поддержка работы WEB приложения
=Верны ответы 1,2
~Верны ответы 2,3
~верны ответы 1,2,3
}
Объект конфигурации “WEB сервис” используется для:{
~Организации динамического обращения к web-сервисам
~Организации обращения к web-сервисам по статической ссылке
=Экспорта функциональности данной информационной базы
}
Объект конфигурации “WSСсылка” используется для:{
~Организации динамического обращения к web-сервисам
=Организации обращения к web-сервисам по статической ссылке
~Экспорта функциональности данной информационной базы
}
В случае если функция, реализующая операцию WEB сервиса, возвращает какое-либо значение. То такое значение определяется (при настройке соответствующего объекта конфигурации) как имеющее тип:{
~Строка
~Число
~Булево
~Элемент XML
=Объект или значение XDTO
~Верны ответы 1,2,3
}
При обращении к WEB сервису по статической ссылке последовательность действий следующая:{
~Получение wsdl описания, настройка подключения (создание прокси), обращение к операции сервиса
=Настройка подключения (создание прокси), обращение к операции сервиса
~Обращение к операции сервиса
}
При обращении к WEB сервису по динамической ссылке последовательность действий следующая:{
=Получение wsdl описания, настройка подключения (создание прокси), обращение к операции сервиса
~Настройка подключения (создание прокси), обращение к операции сервиса
~Обращение к операции сервиса
}
В случае если функция, реализующая операцию WEB сервиса, принимает какое-либо значение в качестве параметра. То такое значение определяется (при настройке соответствующего объекта конфигурации) как имеющее тип:{
~Строка
~Число
~Булево
~Элемент XML
=Объект или значение XDTO
~Верны ответы 1,2,3
}
Каким образом можно определить в каких планах обмена для конкретного прикладного объекта указана авторегистрация?{
~В окне редактирования объекта, раздел "Обмен данными"
~Посредством вызова окна "Палитра свойств" для данного объекта
~Посредством вызова окна "Дополнительно" для данного объекта (закладка "Планы обмена")
~Верно все вышеперечисленное
=Верны ответы 1 и 3
}
Для прикладных объектов в окне редактирования объекта конфигурации на закладке “Обмен данными” указываются …{
~Объекты, при изменении которых в обмен должен попасть данный объект
~Объекты, которые должны попасть в обмен при изменении данного объекта
~Планы обмена, при выполнении обмена по которым будет происходить
изменение данного объекта
=Планы обмена, в которых будут учитываться изменения в данном объекте
}
Редактирование OLE-объектов осуществляется:{
~Встроенным в платформу редактором табличных документов
~Встроенным в платформу редактором OLE-объектов
=Приложением, связанным с OLE-объектом
}
Внешние файлы табличных документов:{
~Имеют расширение XML
=Имеют расширение MXL
~Могут иметь любое расширение
~Не существуют. Все табличные документы встроены в Конфигурацию
}
Automation-сервер “1С:Предприятие 8″…{
~Предоставляет доступ ко всем свойствам и методам своего глобального контекста
~Предоставляет доступ к дополнительным свойствам и методам для выполнения действий, специфичных для работы в режиме Automation
~Позволяет управлять приложением системы "1С:Предприятие 8" из других приложений, а также выполнять действия, аналогичные интерактивным
=Верны все указанные ответы
}
Создание информационной системы с использованием нескольких информационных баз в системе 1С:Предприятие 8…{
~Невозможно
~Реализуется полностью программным способом
=Реализуется с помощью объекта конфигурации "Планы обмена"
~Реализуется встроенным в платформу мастером обмена
}
